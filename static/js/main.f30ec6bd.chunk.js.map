{"version":3,"sources":["contexts/CurrentWeatherContext.js","apis/FlowersIcons.js","components/CurrentWeather.js","contexts/ForecastWeatherContext.js","components/Forecast.js","components/SearchPlaces.js","apis/getGeoLocation.js","apis/getAxiosData.js","contexts/LocationContext.js","apis/config.js","components/Header.js","components/App.js","index.js"],"names":["CurrentWeatherContext","React","createContext","CurrentWeatherProvider","props","useState","currentWeather","setCurrentWeather","Provider","value","children","flowers","CurrentWeather","useContext","current","feels_like","temp","icon","weather","className","Math","ceil","ForecastWeatherContext","ForecastWeatherProvider","forecastWeather","setForecastWeather","Forecast","city","name","options","month","day","rows","list","map","hour","date","Date","dt","toLocaleTimeString","toLocaleDateString","undefined","main","renderForecastCard","libraries","Search","panTo","usePlacesAutoComplete","requestOptions","location","lat","lng","radius","ready","suggestions","status","data","setValue","clearSuggestions","onSelect","address","a","getGeocode","results","getLatLng","console","log","onChange","e","target","disabled","placeholder","id","description","SearchPlaces","useJsApiLoader","googleMapsApiKey","process","isLoaded","loadError","validLatLng","test","getGeoLocation","setLat","setLng","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","getLocation","getAxiosData","urlInput","setData","url","axios","get","getData","LocationContext","LocationProvider","API_BASE_URL","API_CURRENT_WEATHER_URL","API_FORECAST_WEATHER_URL","Header","path","setPath","getLatLngFromUrl","latlng","window","hash","split","filter","el","length","isNaN","document","title","join","addEventListener","event","useEffect","cwUrl","fcUrl","to","onForecastPage","App","component","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f30ec6bd.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nexport const CurrentWeatherContext = React.createContext();\r\n\r\nexport const CurrentWeatherProvider = (props) => {\r\n  \r\n  const [currentWeather, setCurrentWeather] = useState();\r\n  return (\r\n    <CurrentWeatherContext.Provider value={[currentWeather, setCurrentWeather]}>\r\n      {props.children}\r\n    </CurrentWeatherContext.Provider>\r\n  );\r\n};","// Day icon\tNight icon\tDescription\r\n// 01d.png \t01n.png \tclear sky\r\n// 02d.png \t02n.png \tfew clouds\r\n// 03d.png \t03n.png \tscattered clouds\r\n// 04d.png \t04n.png \tbroken clouds\r\n// 09d.png \t09n.png \tshower rain\r\n// 10d.png \t10n.png \train\r\n// 11d.png \t11n.png \tthunderstorm\r\n// 13d.png \t13n.png \tsnow\r\n// 50d.png \t50n.png \tmist\r\n\r\nexport const flowers = {\r\n\r\n'01d':'wi-owm-day-800', //  clear sky\r\n'01n':'wi-night-clear',\r\n'02d':'wi-day-cloudy',  //few clouds\r\n'02n':'wi-night-alt-cloudy',\r\n\r\n'03d':'wi-cloud', //  scattered clouds\r\n'03n':'wi-cloud',\r\n'04d':'wi-cloudy',  //  broken clouds\r\n'04n':'wi-cloudy',\r\n'09d':'wi-rain', //  shower rain\r\n'09n':'wi-rain',\r\n'10d':'wi-day-rain',  //  rain\r\n'10n':'wi-night-alt-rain',\r\n'11d':'wi-day-thunderstorm',  //thunderstorm\r\n'11n':'wi-night-alt-storm-showers',\r\n'13d':'wi-snowflake-cold',  //  snow\r\n'13n':'wi-snowflake-cold',\r\n'50d':'wi-fog',  //   mist\r\n\r\n}","import React, { useContext } from \"react\";\r\n\r\nimport { CurrentWeatherContext } from \"contexts/CurrentWeatherContext\";\r\nimport { flowers } from \"../apis/FlowersIcons\";\r\nimport \"./CurrentWeather.css\";\r\n\r\nconst CurrentWeather = () => {\r\n  const [currentWeather] = useContext(CurrentWeatherContext);\r\n\r\n  if (!currentWeather || !currentWeather.current) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const { feels_like, temp, weather } = currentWeather.current;\r\n\r\n  const { icon } = weather[0];\r\n\r\n  return (\r\n    <div className=\"ui weather-card\">\r\n      <div className=\"weather-label\">\r\n        Current Weather\r\n        {/* <p>Lat: {lat} Lng: {lng}</p> */}\r\n      </div>\r\n      <div className=\"ui  weather-header\">\r\n        <div className=\"ball ui list\">\r\n          <div className=\"item\">\r\n            <i className={`weather-icon wi ${flowers[icon]}`}></i>\r\n          </div>\r\n          <div className=\"item weather-temp\">\r\n            {Math.ceil(temp)} <span className=\"degree\"></span>F\r\n          </div>\r\n          <div className=\"item \">\r\n            Real Feel {Math.ceil(feels_like)}\r\n            <span className=\"degree\"></span>F\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentWeather;\r\n","import React, {useState} from 'react';\r\n\r\nexport const ForecastWeatherContext = React.createContext();\r\n\r\nexport const ForecastWeatherProvider = (props) => {\r\n  \r\n  const [forecastWeather, setForecastWeather] = useState();\r\n  return (\r\n    <ForecastWeatherContext.Provider value={[forecastWeather, setForecastWeather]}>\r\n      {props.children}\r\n    </ForecastWeatherContext.Provider>\r\n  );\r\n};","import React, { useContext } from \"react\";\r\n\r\nimport { flowers } from \"../apis/FlowersIcons\";\r\nimport \"./Forecast.css\";\r\nimport \"./CurrentWeather.css\";\r\nimport { ForecastWeatherContext } from \"contexts/ForecastWeatherContext\";\r\n\r\nconst Forecast = () => {\r\n  const [forecastWeather] = useContext(ForecastWeatherContext);\r\n\r\n  if (!forecastWeather) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const renderForecastCard = () => {\r\n    const options = { month: \"numeric\", day: \"numeric\" };\r\n\r\n    const rows = forecastWeather.list.map((hour) => {\r\n      const date = new Date(hour.dt * 1000);\r\n\r\n      return (\r\n        <div className=\"ui fluid three item menu \" key={hour.dt}>\r\n          <div className=\" item forecast-card-dt-tm\">\r\n            <p>{date.toLocaleTimeString([], { hour: \"2-digit\" })}</p>\r\n            <p>{date.toLocaleDateString(undefined, options)}</p>{\" \"}\r\n          </div>\r\n          <span className=\"item\">\r\n            <i\r\n              className={`weather-icon wi ${flowers[hour.weather[0].icon]}`}\r\n            ></i>\r\n          </span>\r\n          <span className=\"item flex-top weather-temp\">\r\n            <span>{Math.ceil(hour.main.temp)}</span>\r\n            <span className=\"degree-dark\"></span>F\r\n          </span>\r\n        </div>\r\n      );\r\n    });\r\n    return <div>{rows}</div>;\r\n  };\r\n  return (\r\n    <div className=\"ui segments\">\r\n      <div className=\"ui segment\">\r\n        <p>Forecast {forecastWeather.city.name} </p>\r\n      </div>\r\n\r\n      <div className=\"ui segments\">{renderForecastCard()}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default Forecast;\r\n","import React from \"react\";\r\nimport { useJsApiLoader } from \"@react-google-maps/api\";\r\nimport usePlacesAutoComplete, {\r\n  getGeocode,\r\n  getLatLng,\r\n} from \"use-places-autocomplete\";\r\nimport {\r\n  Combobox,\r\n  ComboboxInput,\r\n  ComboboxPopover,\r\n  ComboboxList,\r\n  ComboboxOption,\r\n} from \"@reach/combobox\";\r\nimport \"@reach/combobox/styles.css\";\r\nimport \"./SearchPlaces.css\";\r\n\r\nconst libraries = [\"places\"];\r\n\r\nconst SearchPlaces=({ panTo }) =>{\r\n  // const { isLoaded, loadError } = useLoadScript({\r\n  const { isLoaded, loadError } = useJsApiLoader({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_KEY,\r\n    libraries,\r\n  });\r\n\r\n  if (loadError) return \"Error loading maps\";\r\n  if (!isLoaded) return \"Loading Search\";\r\n\r\n  return <div><Search panTo={panTo} /></div>;\r\n}\r\n\r\nexport const Search= ({ panTo }) =>{\r\n  const {\r\n    ready,\r\n    value,\r\n    suggestions: { status, data },\r\n    setValue,\r\n    clearSuggestions,\r\n  } = usePlacesAutoComplete({\r\n    requestOptions: {\r\n      location: {\r\n        lat: () => 43.653225,\r\n        lng: () => -79.383186,\r\n      },\r\n      radius: 200 * 1000,\r\n    },\r\n  });\r\n \r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <Combobox\r\n        onSelect={async (address) => {\r\n          setValue(address, false);\r\n          clearSuggestions();\r\n          try {\r\n            const results = await getGeocode({ address });\r\n            const { lat, lng } = await getLatLng(results[0]);\r\n\r\n            panTo({ lat, lng });\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        }}\r\n      >\r\n        <ComboboxInput\r\n          value={value}\r\n          onChange={(e) => {\r\n            setValue(e.target.value);\r\n          }}\r\n          disabled={!ready}\r\n          placeholder={\"enter an address\"}\r\n        />\r\n        <ComboboxPopover>\r\n          <ComboboxList>\r\n            {status === \"OK\" &&\r\n              data.map(({ description }, id) => {\r\n              \r\n                return (\r\n                  <ComboboxOption key={id} value={description}></ComboboxOption>\r\n                );\r\n              })}\r\n          </ComboboxList>\r\n        </ComboboxPopover>\r\n      </Combobox>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchPlaces;\r\n","export const validLatLng = (lat, lng) => {\r\n  const regEx = /^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$/;\r\n  const latlng = \"\" + lat + \",\" + lng;\r\n\r\n  return regEx.test(latlng);\r\n};\r\nconst getGeoLocation = (setLat, setLng) => {\r\n  \r\n\r\n  const getLocation = async () => {\r\n    await navigator.geolocation.getCurrentPosition(\r\n      async (position) => {\r\n        setLat(position.coords.latitude);\r\n        setLng(position.coords.longitude);\r\n      },\r\n      () => console.log(\"error getting location\")\r\n    );\r\n  };\r\n\r\n  getLocation();\r\n};\r\n\r\nexport default getGeoLocation;\r\n","import axios from \"axios\";\r\n\r\nconst getAxiosData = (urlInput, setData) => {\r\n \r\n  const getData = async (url) => {\r\n    try {\r\n      const { data } = await axios.get(url);\r\n      if (data) {\r\n        // console.log('getAxiosData data =', data);\r\n        setData(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n// console.log('getAxiosData url = ', urlInput)\r\n  getData(urlInput);\r\n};\r\nexport default getAxiosData;\r\n","import React, {useState} from 'react';\r\n\r\nexport const LocationContext = React.createContext();\r\n\r\nexport const LocationProvider = (props) => {\r\n  \r\n  const [lat, setLat] = useState(null);\r\n  const [lng, setLng ] = useState(null)\r\n  return (\r\n    <LocationContext.Provider value={[lat, setLat, lng, setLng]}>\r\n      {props.children}\r\n    </LocationContext.Provider>\r\n  );\r\n};","export const API_BASE_URL = 'https://api.openweathermap.org';\r\nexport const API_CURRENT_WEATHER_URL = \r\n`${API_BASE_URL}/data/2.5/onecall?units=imperial&exclude=hourly,minutely,alerts&appid=${process.env.REACT_APP_OPEN_WEATHER_DEFAULT_KEY}`\r\nexport const API_FORECAST_WEATHER_URL = \r\n`${API_BASE_URL}/data/2.5/forecast?units=imperial&appid=${process.env.REACT_APP_OPEN_WEATHER_DEFAULT_KEY}`\r\n\r\n\r\n// http://api.openweathermap.org/data/2.5/forecast?q=Detroit,us&appid=48db6016cb32f4b78da9eae4ccd4859d&units=imperial\r\n\r\n// https://api.openweathermap.org/data/2.5/onecall?lat=43.441792&lon=-89.037689&exclude=hourly,minutely,alerts&units=imperial&appid=48db6016cb32f4b78da9eae4ccd4859d\r\n\r\n// exclude=hourly,minutely,alerts","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Header.css\";\r\nimport SearchPlaces from \"./SearchPlaces\";\r\nimport getGeoLocation, { validLatLng } from \"apis/getGeoLocation\";\r\nimport getAxiosData from \"apis/getAxiosData\";\r\nimport { LocationContext } from \"../contexts/LocationContext\";\r\nimport { CurrentWeatherContext } from \"../contexts/CurrentWeatherContext\";\r\nimport { ForecastWeatherContext } from \"contexts/ForecastWeatherContext\";\r\nimport {\r\n  API_CURRENT_WEATHER_URL,\r\n  API_FORECAST_WEATHER_URL,\r\n} from \"../apis/config\";\r\n\r\nconst Header = () => {\r\n  const [path, setPath] = useState(\"\");\r\n  const [lat, setLat, lng, setLng] = useContext(LocationContext);\r\n  const [, setCurrentWeather] = useContext(CurrentWeatherContext);\r\n  const [, setForecastWeather] = useContext(ForecastWeatherContext);\r\n\r\n  const getLatLngFromUrl = () => {\r\n    const latlng = window.location.hash\r\n      .split(\"/\")\r\n      .filter((el) => el !== \"#\" && el.length && !isNaN(el));\r\n    if (latlng.length === 2 && validLatLng(...latlng)) {\r\n      setLat(latlng[0]);\r\n      setLng(latlng[1]);\r\n      document.title = `Lat: ${lat} Lng: ${lng}`;\r\n      setPath(latlng.join(\"/\"));\r\n      return latlng;\r\n    }\r\n    getGeoLocation(setLat, setLng);\r\n    return [];\r\n  };\r\n\r\n  window.addEventListener(\"popstate\", (event) => {\r\n    getLatLngFromUrl();\r\n  });\r\n\r\n  const panTo = ({ lat, lng }) => {\r\n    document.title = `Lat: ${lat} Lng: ${lng}`;\r\n    const onForecastPage = window.location.hash\r\n      .split(\"/\")\r\n      .filter((el) => el === \"forecast\").length;\r\n    setPath([lat, lng].join(\"/\"));\r\n    window.location.hash = `#/${onForecastPage ? \"forecast/\" : \"\"}${[\r\n      lat,\r\n      lng,\r\n    ].join(\"/\")}`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLatLngFromUrl();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (lat && lng) {\r\n      const cwUrl = `${API_CURRENT_WEATHER_URL}&lat=${lat}&lon=${lng}`;\r\n      getAxiosData(cwUrl, setCurrentWeather);\r\n      const fcUrl = `${API_FORECAST_WEATHER_URL}&lat=${lat}&lon=${lng}`;\r\n      getAxiosData(fcUrl, setForecastWeather);\r\n    }\r\n    // Listing one dependancy causes a lint warning but I only want the axios call made once when both lat and lng are updated.\r\n    // listing both as dependancies triggers two axios calls. updates to Lat and Lng are only triggered in the header, lat then lng\r\n  }, [lng]);\r\n\r\n  return (\r\n    <div className=\"ui secondary pointing menu stackable ow-menu\">\r\n      <Link to={`/${path}`} className=\"item\">\r\n        Current Weather\r\n      </Link>\r\n\r\n      <Link to={`/forecast/${path}`} className=\"item\">\r\n        Forecast\r\n      </Link>\r\n      <div className=\"right item\">\r\n        <SearchPlaces panTo={panTo} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport CurrentWeather from \"./CurrentWeather\";\r\nimport Forecast from \"./Forecast\";\r\nimport Header from \"./Header\";\r\nimport { LocationProvider } from \"../contexts/LocationContext\";\r\nimport { CurrentWeatherProvider } from \"../contexts/CurrentWeatherContext\";\r\nimport { ForecastWeatherProvider } from \"contexts/ForecastWeatherContext\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App ui container\">\r\n      <HashRouter>\r\n        <LocationProvider>\r\n          <CurrentWeatherProvider>\r\n            <ForecastWeatherProvider>\r\n              <Header />\r\n              <Switch>\r\n                <Route path=\"/forecast/:lt?/:lg?\" component={Forecast} />\r\n                <Route path=\"/:lt?/:lg?\" exact component={CurrentWeather} />\r\n              </Switch>\r\n            </ForecastWeatherProvider>\r\n          </CurrentWeatherProvider>\r\n        </LocationProvider>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}