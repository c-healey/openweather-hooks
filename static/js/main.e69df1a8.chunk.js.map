{"version":3,"sources":["apis/config.js","apis/FlowersIcons.js","hooks/useLocation.js","hooks/useWeather.js","components/CurrentWeather.js","components/Forecast.js","components/Header.js","components/App.js","index.js"],"names":["API_BASE_URL","API_CURRENT_WEATHER_URL","process","API_FORECAST_WEATHER_URL","flowers","useLocation","lt","lg","validLatLng","lat","lng","regEx","latlng","console","log","test","setLatLng","useState","setLat","setLng","useEffect","getLocation","a","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","useWeather","urlInput","response","setResponse","url","axios","get","data","getData","CurrentWeather","useParams","current","feels_like","temp","icon","weather","className","Math","ceil","Forecast","city","name","options","month","day","rows","list","map","hour","date","Date","dt","toLocaleTimeString","toLocaleDateString","undefined","main","renderForecastCard","Header","optionalPaths","window","location","hash","split","filter","el","length","join","to","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAAaA,EAAe,iCACfC,EAAuB,UACjCD,EADiC,iFACoDE,oCAC3EC,EAAwB,UAClCH,EADkC,mDACqBE,oCCO7CE,EAAU,CAEvB,MAAM,iBACN,MAAM,iBACN,MAAM,gBACN,MAAM,sBAEN,MAAM,WACN,MAAM,WACN,MAAM,YACN,MAAM,YACN,MAAM,UACN,MAAM,UACN,MAAM,cACN,MAAM,oBACN,MAAM,sBACN,MAAM,6BACN,MAAM,oBACN,MAAM,oBACN,MAAM,U,iDCmBSC,EA/CK,SAACC,EAAIC,GAEvB,IAAMC,EAAc,SAACC,EAAKC,GACxB,IAAMC,EAAQ,2FACRC,EAAcH,EAAM,IAAMC,EAEhC,OADAG,QAAQC,IAAI,WAAYF,EAAQD,EAAMI,KAAKH,IACpCD,EAAMI,KAAKH,IAEdI,EAAW,SAACP,EAAKC,GACrB,OAAID,GAAOC,GAGJF,EAAYC,EAAKC,GAAK,CAACD,EAAKC,GAF1B,CAAC,KAAM,OAVY,EAeVO,mBAASD,EAAUV,EAAIC,GAAI,IAfjB,mBAezBE,EAfyB,KAepBS,EAfoB,OAgBVD,mBAASD,EAAUV,EAAIC,GAAI,IAhBjB,mBAgBzBG,EAhByB,KAgBpBS,EAhBoB,KA4C9B,OAzBAC,qBAAU,WACJZ,EAAYF,EAAIC,KAClBM,QAAQC,IAAI,cAAeR,EAAIC,GAC/BW,EAAOZ,GACPa,EAAOZ,MAER,CAACD,EAAIC,IAERa,qBAAU,WACR,IAAMC,EAAW,uCAAG,sBAAAC,EAAA,sEACZC,UAAUC,YAAYC,mBAAtB,uCACJ,WAAOC,GAAP,SAAAJ,EAAA,sDACEJ,EAAOQ,EAASC,OAAOC,UACvBT,EAAOO,EAASC,OAAOE,WAFzB,2CADI,uDAKJ,kBAAMhB,QAAQC,IAAI,6BANF,2CAAH,qDASZL,GAAQC,IAETG,QAAQC,IAAI,gBAAiBL,EAAKC,GAClCW,OAGH,CAACZ,EAAKC,IACF,CAACD,EAAKC,ICfAoB,EA1BI,SAACC,GAAoC,IAA1BzB,EAAyB,uDAApB,KAAMC,EAAc,uDAAT,KAAS,EAElCF,EAAYC,EAAIC,GAFkB,mBAE9CE,EAF8C,KAEzCC,EAFyC,OAGrBO,mBAAS,MAHY,mBAG9Ce,EAH8C,KAGpCC,EAHoC,KAwBrD,OAnBAb,qBAAU,WAaJX,GAAOC,GAXE,uCAAG,WAAOwB,GAAP,iBAAAZ,EAAA,+EAEWa,IAAMC,IAAIF,GAFrB,iBAEJG,EAFI,EAEJA,OAENJ,EAAYI,GAJF,gDAOZxB,QAAQC,IAAR,MAPY,yDAAH,qDAaXwB,CAAQ,GAAD,OAAIP,EAAJ,gBAAoBtB,EAApB,gBAA+BC,MAEvC,CAACD,EAAKC,EAAKqB,IAEP,CAACC,EAAUvB,EAAKC,I,OCkBV6B,EAtCQ,WAAO,IAAD,EAEVC,cAAXlC,EAFqB,EAErBA,GAAIC,EAFiB,EAEjBA,GAFiB,EAKFuB,EAAW7B,EAAyBK,EAAIC,GALtC,mBAKpB8B,EALoB,eAQ3B,IAAKA,IAASA,EAAKI,QACjB,OAAO,6CATkB,MAYWJ,EAAKI,QAAnCC,EAZmB,EAYnBA,WAAYC,EAZO,EAYPA,KAEZC,EAdmB,EAYDC,QAED,GAAjBD,KAGR,OACE,sBAAKE,UAAU,kBAAf,UACE,qBAAKA,UAAU,gBAAf,8BACA,qBAAKA,UAAU,qBAAf,SACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,OAAf,SACE,mBAAGA,UAAS,0BAAqB1C,EAAQwC,QAE3C,sBAAKE,UAAU,oBAAf,UACGC,KAAKC,KAAKL,GADb,IACoB,sBAAMG,UAAU,WADpC,OAGA,sBAAKA,UAAU,QAAf,uBACaC,KAAKC,KAAKN,GACrB,sBAAMI,UAAU,WAFlB,gBCoBKG,G,MAhDE,WAAO,IAAD,EACJT,cAAXlC,EADe,EACfA,GAAIC,EADW,EACXA,GADW,EAGIuB,EAAW3B,EAA0BG,EAAIC,GAH7C,mBAGd8B,EAHc,KAGR5B,EAHQ,KAGHC,EAHG,KAOrB,GAHAG,QAAQC,IAAI,iBAAkBR,EAAIC,EAAIE,EAAKC,IAGtC2B,EACH,OAAO,6CA8BT,OACE,sBAAKS,UAAU,cAAf,UACE,qBAAKA,UAAU,aAAf,SACE,0CAAaT,EAAKa,KAAKC,KAAvB,SAGF,qBAAKL,UAAU,cAAf,SAhCuB,WACzB,IAAMM,EAAU,CAAEC,MAAO,UAAWC,IAAK,WAEnCC,EAAOlB,EAAKmB,KAAKC,KAAI,SAACC,GAC1B,IAAMC,EAAO,IAAIC,KAAe,IAAVF,EAAKG,IAE3B,OACE,sBAAKf,UAAU,4BAAf,UACE,sBAAKA,UAAU,4BAAf,UACE,4BAAIa,EAAKG,mBAAmB,GAAI,CAAEJ,KAAM,cACxC,4BAAIC,EAAKI,wBAAmBC,EAAWZ,KAAc,OAEvD,sBAAMN,UAAU,OAAhB,SACE,mBACEA,UAAS,0BAAqB1C,EAAQsD,EAAKb,QAAQ,GAAGD,WAG1D,uBAAME,UAAU,6BAAhB,UACE,+BAAOC,KAAKC,KAAKU,EAAKO,KAAKtB,QAC3B,sBAAMG,UAAU,gBAFlB,SAV8CY,EAAKG,OAiBzD,OAAO,8BAAMN,IAQmBW,UC1BrBC,EAxBA,WAEb,IAAMC,EAAgBC,OAAOC,SAASC,KACnCC,MAAM,KACNC,QAAO,SAACC,GAAD,MAAe,MAAPA,GAAqB,aAAPA,GAA6B,UAAPA,GAAkBA,EAAGC,UACxEC,KAAK,KAGR,OACE,sBAAK9B,UAAU,6BAAf,UACE,cAAC,IAAD,CACE+B,GAAE,WAAMT,GACRtB,UAAU,OAFZ,6BAMA,cAAC,IAAD,CACE+B,GAAE,oBAAeT,GACjBtB,UAAU,OAFZ,0BCESgC,MAdf,WACE,OACE,qBAAKhC,UAAU,mBAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiC,KAAK,sBAAsBC,UAAW/B,IAC7C,cAAC,IAAD,CAAO8B,KAAK,aAAaE,OAAK,EAACD,UAAWzC,aCVpD2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e69df1a8.chunk.js","sourcesContent":["export const API_BASE_URL = 'https://api.openweathermap.org';\r\nexport const API_CURRENT_WEATHER_URL = \r\n`${API_BASE_URL}/data/2.5/onecall?units=imperial&exclude=hourly,minutely,alerts&appid=${process.env.REACT_APP_OPEN_WEATHER_DEFAULT_KEY}`\r\nexport const API_FORECAST_WEATHER_URL = \r\n`${API_BASE_URL}/data/2.5/forecast?units=imperial&appid=${process.env.REACT_APP_OPEN_WEATHER_DEFAULT_KEY}`\r\n\r\n\r\n// http://api.openweathermap.org/data/2.5/forecast?q=Detroit,us&appid=48db6016cb32f4b78da9eae4ccd4859d&units=imperial\r\n\r\n// https://api.openweathermap.org/data/2.5/onecall?lat=43.441792&lon=-89.037689&exclude=hourly,minutely,alerts&units=imperial&appid=48db6016cb32f4b78da9eae4ccd4859d\r\n\r\n// exclude=hourly,minutely,alerts","// Day icon\tNight icon\tDescription\r\n// 01d.png \t01n.png \tclear sky\r\n// 02d.png \t02n.png \tfew clouds\r\n// 03d.png \t03n.png \tscattered clouds\r\n// 04d.png \t04n.png \tbroken clouds\r\n// 09d.png \t09n.png \tshower rain\r\n// 10d.png \t10n.png \train\r\n// 11d.png \t11n.png \tthunderstorm\r\n// 13d.png \t13n.png \tsnow\r\n// 50d.png \t50n.png \tmist\r\n\r\nexport const flowers = {\r\n\r\n'01d':'wi-owm-day-800', //  clear sky\r\n'01n':'wi-night-clear',\r\n'02d':'wi-day-cloudy',  //few clouds\r\n'02n':'wi-night-alt-cloudy',\r\n\r\n'03d':'wi-cloud', //  scattered clouds\r\n'03n':'wi-cloud',\r\n'04d':'wi-cloudy',  //  broken clouds\r\n'04n':'wi-cloudy',\r\n'09d':'wi-rain', //  shower rain\r\n'09n':'wi-rain',\r\n'10d':'wi-day-rain',  //  rain\r\n'10n':'wi-night-alt-rain',\r\n'11d':'wi-day-thunderstorm',  //thunderstorm\r\n'11n':'wi-night-alt-storm-showers',\r\n'13d':'wi-snowflake-cold',  //  snow\r\n'13n':'wi-snowflake-cold',\r\n'50d':'wi-fog',  //   mist\r\n\r\n}","import { useState, useEffect } from \"react\";\r\n\r\nconst useLocation = (lt, lg) => {\r\n  \r\n  const validLatLng = (lat, lng) => {\r\n    const regEx = /^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$/;\r\n    const latlng = \"\" + lat + \",\" + lng;\r\n    console.log(\"Validate\", latlng, regEx.test(latlng));\r\n    return regEx.test(latlng);\r\n  };\r\n  const setLatLng= (lat, lng)=>{\r\n    if(!lat ||!lng){\r\n      return [null, null];\r\n    }\r\n    return validLatLng(lat, lng)?[lat, lng]:[null, null]\r\n  }\r\n\r\n  let [lat, setLat] = useState(setLatLng(lt, lg)[0]);\r\n  let [lng, setLng] = useState(setLatLng(lt, lg)[1]);\r\n \r\n\r\n  useEffect(() => {\r\n    if (validLatLng(lt, lg)) {\r\n      console.log('set LAT LNG', lt, lg)\r\n      setLat(lt);\r\n      setLng(lg);\r\n    }\r\n  }, [lt, lg]);\r\n\r\n  useEffect(() => {\r\n    const getLocation = async () => {\r\n      await navigator.geolocation.getCurrentPosition(\r\n        async (position) => {\r\n          setLat(position.coords.latitude);\r\n          setLng(position.coords.longitude);\r\n        },\r\n        () => console.log(\"error getting location\")\r\n      );\r\n    };\r\n    if (!lat && !lng) {\r\n      \r\n        console.log(\"!lat && !lng \", lat, lng);\r\n        getLocation();\r\n      \r\n    }\r\n  }, [lat, lng]);\r\n  return [lat, lng];\r\n};\r\n\r\nexport default useLocation;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport useLocation from \"./useLocation\";\r\n\r\nconst useWeather = (urlInput, lt = null, lg = null) => {\r\n  // console.log(`USEWEATHER lt = ${lt} lg = ${lg}`)\r\n  const [lat, lng] = useLocation(lt, lg);\r\n  const [response, setResponse] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"useWeather lat lng changed\");\r\n    const getData = async (url) => {\r\n      try {\r\n        const { data } = await axios.get(url);\r\n        if (data) {\r\n          setResponse(data);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    // console.log(`useWeather lat=${lat} lng = ${lng}`)\r\n    if (lat && lng) {\r\n      // console.log(\"Get weather for \", lat, lng);\r\n      getData(`${urlInput}&lat=${lat}&lon=${lng}`);\r\n    }\r\n  }, [lat, lng, urlInput]);\r\n\r\n  return [response, lat, lng];\r\n};\r\nexport default useWeather;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { API_CURRENT_WEATHER_URL } from \"../apis/config\";\r\nimport { flowers } from \"../apis/FlowersIcons\";\r\nimport \"./CurrentWeather.css\";\r\n\r\nimport useWeather from \"../hooks/useWeather\";\r\n\r\nconst CurrentWeather = () => {\r\n\r\n  let { lt, lg } = useParams();\r\n \r\n\r\n  const [data, lat, lng] = useWeather(API_CURRENT_WEATHER_URL, lt, lg);\r\n\r\n\r\n  if (!data || !data.current) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const { feels_like, temp, weather } = data.current;\r\n\r\n  const { icon } = weather[0];\r\n  // console.log(data);\r\n  // console.log(\"current weather data\", feels_like, temp, icon);\r\n  return (\r\n    <div className=\"ui weather-card\">\r\n      <div className=\"weather-label\">Current Weather </div>\r\n      <div className=\"ui  weather-header\">\r\n        <div className=\"ball ui list\">\r\n          <div className=\"item\">\r\n            <i className={`weather-icon wi ${flowers[icon]}`}></i>\r\n          </div>\r\n          <div className=\"item weather-temp\">\r\n            {Math.ceil(temp)} <span className=\"degree\"></span>F\r\n          </div>\r\n          <div className=\"item \">\r\n            Real Feel {Math.ceil(feels_like)}\r\n            <span className=\"degree\"></span>F\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentWeather;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { API_FORECAST_WEATHER_URL } from \"../apis/config\";\r\n\r\nimport { flowers } from \"../apis/FlowersIcons\";\r\nimport useWeather from \"../hooks/useWeather\";\r\nimport \"./Forecast.css\";\r\nimport \"./CurrentWeather.css\";\r\n\r\nconst Forecast = () => {\r\n  let { lt, lg } = useParams();\r\n  \r\n  const [data, lat, lng] = useWeather(API_FORECAST_WEATHER_URL, lt, lg);\r\n  console.log('FORCAST lt, lg', lt, lg, lat, lng)\r\n\r\n\r\n  if (!data) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  // console.log(\"FORECAST WEATHER\", data);\r\n\r\n  const renderForecastCard = () => {\r\n    const options = { month: \"numeric\", day: \"numeric\" };\r\n\r\n    const rows = data.list.map((hour) => {\r\n      const date = new Date(hour.dt * 1000);\r\n\r\n      return (\r\n        <div className=\"ui fluid three item menu \" key={hour.dt}>\r\n          <div className=\" item forecast-card-dt-tm\">\r\n            <p>{date.toLocaleTimeString([], { hour: \"2-digit\" })}</p>\r\n            <p>{date.toLocaleDateString(undefined, options)}</p>{\" \"}\r\n          </div>\r\n          <span className=\"item\">\r\n            <i\r\n              className={`weather-icon wi ${flowers[hour.weather[0].icon]}`}\r\n            ></i>\r\n          </span>\r\n          <span className=\"item flex-top weather-temp\">\r\n            <span>{Math.ceil(hour.main.temp)}</span>\r\n            <span className=\"degree-dark\"></span>F\r\n          </span>\r\n        </div>\r\n      );\r\n    });\r\n    return <div>{rows}</div>;\r\n  };\r\n  return (\r\n    <div className=\"ui segments\">\r\n      <div className=\"ui segment\">\r\n        <p>Forecast {data.city.name} </p>\r\n      </div>\r\n\r\n      <div className=\"ui segments\">{renderForecastCard()}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default Forecast;\r\n","import React from \"react\";\r\nimport { Link} from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n\r\n  const optionalPaths = window.location.hash\r\n    .split(\"/\")\r\n    .filter((el) => el !== '#' && el !== \"forecast\"  && el !== 'today' && el.length)\r\n    .join(\"/\");\r\n  // console.log(\"HEADER\", optionalPaths);\r\n \r\n  return (\r\n    <div className=\"ui secondary pointing menu\">\r\n      <Link\r\n        to={`/${optionalPaths}`}\r\n        className=\"item\">\r\n        Current Weather\r\n      </Link>\r\n\r\n      <Link\r\n        to={`/forecast/${optionalPaths}` }\r\n        className=\"item\">\r\n        Forecast\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport CurrentWeather from \"./CurrentWeather\";\r\nimport Forecast from \"./Forecast\";\r\nimport Header from \"./Header\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App ui container\">\r\n      <HashRouter>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/forecast/:lt?/:lg?\" component={Forecast} />\r\n          <Route path=\"/:lt?/:lg?\" exact component={CurrentWeather} />\r\n        </Switch>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}